# ℹ️ Project CI/CD: Basic install and test flow with no deployments

language: node_js
node_js:
  - '10'

# All dependencies are managed in Docker container
install: true

# Setup Code Climate test reporter
before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

# Test workflow builds and runs a container to create app production bundle
# which is then used within Docker Compose to run Cypress acceptance tests.
script:
  # Building the app image will install dependencies then lint and unit test so
  # that image is ready to build app bundle when run
  - docker build -t crystal-ball/react-application-prototype .
  # Copy code coverage report into Travis workspace for Code Climate test
  # coverage reporting
  - docker run --rm -v $(pwd)/coverage:/tmp crystal-ball/react-application-prototype cp -a /usr/src/app/coverage/. /tmp/
  # With Docker Compose use Nginx+built assets and Cypress to acceptance test
  - docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --exit-code-from cypress --abort-on-container-exit

# Call Code Climate reporter with results, note the --prefix option is used to
# strip the file paths output from the Docker container
after_script:
  - ./cc-test-reporter after-build --prefix /usr/src/app --exit-code $TRAVIS_TEST_RESULT

notifications:
  slack:
    on_success: change
    on_failure: always
    secure: CyZVrVd+/xYc9pzvlr3fsroiIQIwDHWsEP8yFPERRlVeWqOyrcz036dS/Bw3Y/YiYp42mM6MMRTowAYCJ8XojBg4v/z301PhHFKgtpTF3p6ky1kW9Fiw/jGv92GeptJXLFy1pn4InmR6xsSSnwLyPftWlBBhlZN0S7fWNapTdyFHARIv9/Oo4oEk0MUcLRsEN9u7VGKXFDicntxBdb6mTiSsANiAThm0Eb+sxtFXqOQLbuko4C6rk2iSjymKgNGuWxDSgmqdGp7Bi6SWu5gQXck6rHi6OtS39TObtl5bscaJ+C3CN136ww0TlNvNjtBAm5iMkK+kqtvspLpXTqySwMl/+bPVFIu0OBMPtdo/GaTbrluyQ3w0gYzIVnVFODlFg9qC87eLncYOYwrhVVspCboiSOfjw6tKZu01S7Gt6gYuEfRFXYOL97292U/z7YYRsW2DGLG1ZxM/W5Pjr5mqgoug1n8CH5LwFj1rdpmPr5f9er4Ht3TDeC9xZ+Q07iJUeOB//g7bi2V3ESeu/XLAXOlwxi5UuGRD3anJ/U2W1T9R3TX+swu9BR3gu7rjv4LTrnQAC0pFTb9lA5H/8VbuQoekifEN+lF/tQECPs5BSzbO07f2+1QkEf65edC4If/BlqT9Kz+n4GeNGykPtZfgclboj7Em0x8HKwZu5FkOveY=
